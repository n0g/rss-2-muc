#! /usr/bin/env python
import os
import sys
import time
import codecs
import cPickle
import argparse
import feedparser

sys.stdout = codecs.getwriter('utf-8')(sys.stdout,errors='ignore')

if __name__ == "__main__":
	# parse options
	parser = argparse.ArgumentParser(description='Prints RSS Items to standard output')

	parser.add_argument('--feed', action="append",dest="feeds")
	args = parser.parse_args()

	if args.feeds == None:
		print "No Feeds specified. Aborting."
		sys.exit(1)


	# read last update times from file (if it exists)
	last_update_pickle_filename = '%s/.%s.last_update' % (os.path.dirname(sys.argv[0]),os.path.basename(sys.argv[0]))
	try:
		last_update_pickle = open(last_update_pickle_filename,"rb")
		last_update = cPickle.load(last_update_pickle)
		last_update_pickle.close()
	except IOError:
		# initialize update times if last update times are unknown
		last_update = dict()
		for rss in args.feeds:
			last_update[rss] = time.gmtime()

	last_update_pickle = open(last_update_pickle_filename,"w+b")

	# read rss feeds every 3 minutes and save update time
	while True:
		for rss in args.feeds:
			feed = feedparser.parse(rss)

			for item in feed["items"]:
				if item["published_parsed"] > last_update[rss]:
					sys.stdout.write('%s...%s\n',item["title"],item["link"])
					sys.stdout.flush()
			last_update[rss] = feed["updated_parsed"]
		cPickle.dump(last_update,last_update_pickle)
		time.sleep(180)
